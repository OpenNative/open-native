plugins {
  id 'com.android.library'
}
def safeExtGet = {prop, fallback ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

import groovy.json.JsonSlurper
import com.android.Version

def agpVersion = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')[0].toInteger()

android {
    if (agpVersion >= 7) {
      namespace "com.bridge"
    }
    compileSdk safeExtGet("compileSdkVersion",31)
    
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion',21)
        targetSdkVersion safeExtGet("targetSdkVersion",31)
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    if (agpVersion >= 8) {
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_17
          targetCompatibility JavaVersion.VERSION_17
      }
    }
}

def modules = new JsonSlurper().parse(new File(projectDir,"modules.json"));
def selfModuleName = "open-native_core"
dependencies {
    implementation 'com.facebook.react:react-native:+'
    modules.each {
      if (!it.androidProjectName.equals(selfModuleName)) {
        implementation project(":${it.androidProjectName}")
      }
    }
}
